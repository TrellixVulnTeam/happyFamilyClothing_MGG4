{"ast":null,"code":"import { createSelector } from \"reselect\"; // import memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections).map(key => collections[key]));\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]); //\n// export const selectCollections = createSelector([selectShop],\n//   shop => shop.collections\n// )\n//\n// export const selectCollectionsForPreview = createSelector([selectCollections],\n//   collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n// )\n//\n// export const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections],\n//   collections => collections ? collections[collectionUrlParam] : null)\n// )\n//\n// export const selectIsCollectionFetching = createSelector(\n//   [selectShop],\n//   shop => shop.isFetching\n// )\n//\n// export const selectIsCollectionsLoaded = createSelector([selectShop],\n// shop => !!shop.collections\n//   )","map":{"version":3,"sources":["/Users/yueranyu/Code/03Javascript/2022_React_Practice/HappyFamily/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAFwC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,CAACO,kBAAD,CAFd,CADT,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {createSelector} from \"reselect\";\n// import memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections => Object.keys(collections).map(key => collections[key])\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => collections[collectionUrlParam]\n  );\n\n\n//\n// export const selectCollections = createSelector([selectShop],\n//   shop => shop.collections\n// )\n//\n// export const selectCollectionsForPreview = createSelector([selectCollections],\n//   collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n// )\n//\n// export const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections],\n//   collections => collections ? collections[collectionUrlParam] : null)\n// )\n//\n// export const selectIsCollectionFetching = createSelector(\n//   [selectShop],\n//   shop => shop.isFetching\n// )\n//\n// export const selectIsCollectionsLoaded = createSelector([selectShop],\n// shop => !!shop.collections\n//   )"]},"metadata":{},"sourceType":"module"}