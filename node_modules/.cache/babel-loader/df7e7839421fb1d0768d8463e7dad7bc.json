{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useWindowSize = () => {\n  _s();\n\n  const isSSR = typeof window === 'undefined';\n  const [windowSize, setWindowSize] = useState({\n    width: isSSR ? 1200 : window.innerWidth,\n    height: isSSR ? 800 : window.innerWidth\n  });\n\n  const changeWindowSize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', changeWindowSize);\n    return () => {\n      window.removeEventListener('resize', changeWindowSize);\n    };\n  }, []);\n  return windowSize;\n};\n\n_s(useWindowSize, \"/qA4vFfBWO60uF6twpLAmtQLSOU=\");","map":{"version":3,"sources":["/Users/yueranyu/Code/03Javascript/2022_React_Practice/HappyFamily/src/components/hooks/useWindowSize.jsx"],"names":["useState","useEffect","useWindowSize","isSSR","window","windowSize","setWindowSize","width","innerWidth","height","changeWindowSize","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,KAAK,GAAG,OAAOC,MAAP,KAAkB,WAAhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAC3CO,IAAAA,KAAK,EAAEJ,KAAK,GAAG,IAAH,GAAUC,MAAM,CAACI,UADc;AAE3CC,IAAAA,MAAM,EAAEN,KAAK,GAAG,GAAH,GAASC,MAAM,CAACI;AAFc,GAAD,CAA5C;;AAKA,QAAME,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,aAAa,CAAC;AAACC,MAAAA,KAAK,EAAEH,MAAM,CAACI,UAAf;AAA2BC,MAAAA,MAAM,EAAEL,MAAM,CAACO;AAA1C,KAAD,CAAb;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AACA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,SAAOL,UAAP;AACD,CAlBM;;GAAMH,a","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport const useWindowSize = () => {\n  const isSSR = typeof window === 'undefined'\n  const [windowSize, setWindowSize] = useState({\n    width: isSSR ? 1200 : window.innerWidth,\n    height: isSSR ? 800 : window.innerWidth\n  })\n\n  const changeWindowSize = () => {\n    setWindowSize({width: window.innerWidth, height: window.innerHeight})\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', changeWindowSize)\n    return () => {\n      window.removeEventListener('resize', changeWindowSize)\n    }\n  }, [])\n  return windowSize\n}\n"]},"metadata":{},"sourceType":"module"}