{"ast":null,"code":"import { createSelector } from 'reselect'; // return cart object\n\nconst selectCart = state => state.cart; // return the cart items array\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden); // return the total quantity\n\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/yueranyu/Desktop/HappyFamily/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","accumulatedPrice","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAC3CE,IAAI,IAAIA,IAAI,CAACE,SAD8B,CAAtC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,EAC5CE,IAAI,IAAIA,IAAI,CAACI,MAD+B,CAAvC,C,CAGP;;AACA,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAAC,CAACI,eAAD,CAAD,EAChDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CADmC,CAA3C;AAIP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EAC3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACK,gBAAD,EAAmBH,QAAnB,KAAgCG,gBAAgB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAAjG,EAAwG,CAAxG,CAD8B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\n// return cart object\nconst selectCart = state => state.cart;\n\n// return the cart items array\nexport const selectCartItems = createSelector([selectCart],\n  cart => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector([selectCart],\n  cart => cart.hidden\n)\n// return the total quantity\nexport const selectCartItemsCount = createSelector([selectCartItems],\n  cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n)\n\nexport const selectCartTotal = createSelector([selectCartItems],\n  cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price, 0)\n)"]},"metadata":{},"sourceType":"module"}