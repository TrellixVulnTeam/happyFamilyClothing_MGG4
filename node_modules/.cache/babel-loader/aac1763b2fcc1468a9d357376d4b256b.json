{"ast":null,"code":"var _jsxFileName = \"/Users/yueranyu/Code/03Javascript/React_Practice/crwn-clothing-1/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from \"react-router\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport HomePage from './pages/homepages/homepage.component';\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\"; //remember: in the previous video, we stored the user data in our database, but now we have to store that data in the 'state' of our application so we can use it in our app~\n\nimport { checkUserSession } from './redux/user/user.actions';\nimport { GlobalStyle } from \"./global.styles\";\nimport SignIn from \"./components/sign-in/sign-in.component\";\nimport SignUp from \"./components/sign-up/sign-up.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport ScrollToTop from \"./components/scroll-to-top/scroll-to-top\";\nimport ContactPage from \"./components/contact/contact.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const currentUser = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(checkUserSession());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: ShopPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contactUs\",\n        component: ContactPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: CheckoutPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        eaxct: true,\n        path: \"/signup\",\n        component: SignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Y2UOCMH/BN6gIzsdaop316k9ONg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yueranyu/Code/03Javascript/React_Practice/crwn-clothing-1/client/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","useSelector","useDispatch","selectCurrentUser","HomePage","ShopPage","Header","CheckoutPage","checkUserSession","GlobalStyle","SignIn","SignUp","Footer","ScrollToTop","ContactPage","App","currentUser","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,QAAvB,QAAsC,cAAtC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB,C,CACA;;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGf,WAAW,CAACE,iBAAD,CAA/B;AACA,QAAMc,QAAQ,GAAGf,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,SAAS,EAAES;AAA1C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAEP;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AACO,QAAA,MAAM,EAAE,MAAMS,WAAW,gBAAI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBAA2B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAD3D;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEL;AAAvC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBD;;GAAMI,G;UACgBd,W,EACHC,W;;;KAFba,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect} from \"react-router\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectCurrentUser} from \"./redux/user/user.selectors\";\nimport HomePage from './pages/homepages/homepage.component'\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\n//remember: in the previous video, we stored the user data in our database, but now we have to store that data in the 'state' of our application so we can use it in our app~\nimport {checkUserSession} from './redux/user/user.actions';\nimport {GlobalStyle} from \"./global.styles\";\nimport SignIn from \"./components/sign-in/sign-in.component\";\nimport SignUp from \"./components/sign-up/sign-up.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport ScrollToTop from \"./components/scroll-to-top/scroll-to-top\";\nimport ContactPage from \"./components/contact/contact.component\";\n\nconst App = () => {\n  const currentUser = useSelector(selectCurrentUser)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(checkUserSession())\n  }, [dispatch])\n\n  return (\n    <div>\n      <GlobalStyle/>\n      <Header/>\n      <Switch>\n        <Route exact path='/' component={HomePage}/>\n        <Route path='/shop' component={ShopPage}/>\n        <Route exact path='/contactUs' component={ContactPage}/>\n        <Route exact path='/checkout' component={CheckoutPage}/>\n        <Route exact path='/signin'\n               render={() => currentUser ? (<Redirect to='/'/>) : (<SignIn/>)}/>\n        <Route eaxct path='/signup' component={SignUp}/>\n      </Switch>\n      <ScrollToTop/>\n      <Footer className='footer'/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}