{"ast":null,"code":"var _jsxFileName = \"/Users/yueranyu/Code/03Javascript/React_Practice/crwn-clothing-1/client/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SignInWrapper, ButtonBarWrapper, SignInTitle, PTag, OptionLink, SignUpWrapper } from './sign-in.style';\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.compnent\";\nimport { emailSignInStart, googleSignInStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PTag, {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"email\",\n        handleChange: handleChange,\n        value: email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"password\",\n        handleChange: handleChange,\n        value: password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonBarWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: ['', \"Sign GOOGLE\", '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpWrapper, {\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(OptionLink, {\n          to: \"/signup\",\n          children: ['', \"Sign Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"ZAY+yiB1/nWYxaEyFbsesoJXH6g=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/yueranyu/Code/03Javascript/React_Practice/crwn-clothing-1/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","SignInWrapper","ButtonBarWrapper","SignInTitle","PTag","OptionLink","SignUpWrapper","connect","FormInput","CustomButton","emailSignInStart","googleSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {SignInWrapper, ButtonBarWrapper, SignInTitle, PTag, OptionLink, SignUpWrapper} from './sign-in.style';\nimport {connect} from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.compnent\";\nimport {emailSignInStart, googleSignInStart} from \"../../redux/user/user.actions\";\n\n\nconst SignIn = ({googleSignInStart, emailSignInStart}) => {\n  const [userCredentials, setCredentials] = useState({email: '', password: ''})\n  const {email, password} = userCredentials\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    emailSignInStart(email, password)\n  }\n\n  const handleChange = (event) => {\n    const {value, name} = event.target;\n    setCredentials({...userCredentials, [name]: value})\n  }\n\n  return (\n    <SignInWrapper>\n      <SignInTitle>I already have an account.</SignInTitle>\n      <PTag>Sign in with your email and password</PTag>\n      <form onSubmit={handleSubmit}>\n        <FormInput name='email' type='email' label='email' handleChange={handleChange} value={email} required/>\n        <FormInput name='password' type='password' label='password' handleChange={handleChange} value={password}\n                   required/>\n        <ButtonBarWrapper>\n          <CustomButton type='submit'>Sign In</CustomButton>\n          <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>{''}Sign\n            GOOGLE{''}</CustomButton>\n        </ButtonBarWrapper>\n        <SignUpWrapper>Don't have an account?\n          <OptionLink to='/signup'>{''}Sign Up</OptionLink>\n        </SignUpWrapper>\n      </form>\n    </SignInWrapper>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}