{"ast":null,"code":"import _slicedToArray from\"/Users/yueranyu/Code/03Javascript/2022_React_Practice/HappyFamily/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export var useWindowSize=function useWindowSize(){var isSSR=typeof window==='undefined';var _useState=useState({width:isSSR?1200:window.innerWidth,height:isSSR?800:window.innerWidth}),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];var changeWindowSize=function changeWindowSize(){setWindowSize({width:window.innerWidth,height:window.innerHeight});};useEffect(function(){window.addEventListener('resize',changeWindowSize);return function(){window.removeEventListener('resize',changeWindowSize);};},[]);return windowSize;};","map":{"version":3,"sources":["/Users/yueranyu/Code/03Javascript/2022_React_Practice/HappyFamily/src/components/hooks/useWindowSize.jsx"],"names":["useState","useEffect","useWindowSize","isSSR","window","width","innerWidth","height","windowSize","setWindowSize","changeWindowSize","innerHeight","addEventListener","removeEventListener"],"mappings":"wLAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,GAAMC,CAAAA,KAAK,CAAG,MAAOC,CAAAA,MAAP,GAAkB,WAAhC,CADiC,cAEGJ,QAAQ,CAAC,CAC3CK,KAAK,CAAEF,KAAK,CAAG,IAAH,CAAUC,MAAM,CAACE,UADc,CAE3CC,MAAM,CAAEJ,KAAK,CAAG,GAAH,CAASC,MAAM,CAACE,UAFc,CAAD,CAFX,wCAE1BE,UAF0B,eAEdC,aAFc,eAOjC,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BD,aAAa,CAAC,CAACJ,KAAK,CAAED,MAAM,CAACE,UAAf,CAA2BC,MAAM,CAAEH,MAAM,CAACO,WAA1C,CAAD,CAAb,CACD,CAFD,CAIAV,SAAS,CAAC,UAAM,CACdG,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,CAAkCF,gBAAlC,EACA,MAAO,WAAM,CACXN,MAAM,CAACS,mBAAP,CAA2B,QAA3B,CAAqCH,gBAArC,EACD,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CAMA,MAAOF,CAAAA,UAAP,CACD,CAlBM","sourcesContent":["import {useState, useEffect} from 'react';\n\nexport const useWindowSize = () => {\n  const isSSR = typeof window === 'undefined'\n  const [windowSize, setWindowSize] = useState({\n    width: isSSR ? 1200 : window.innerWidth,\n    height: isSSR ? 800 : window.innerWidth\n  })\n\n  const changeWindowSize = () => {\n    setWindowSize({width: window.innerWidth, height: window.innerHeight})\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', changeWindowSize)\n    return () => {\n      window.removeEventListener('resize', changeWindowSize)\n    }\n  }, [])\n  return windowSize\n}\n"]},"metadata":{},"sourceType":"module"}